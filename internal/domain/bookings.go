package domain

import (
	"context"
	"time"

	"github.com/google/uuid"
)

type (
	// BookingRepoCommands is an interface for persisting bookings
	BookingRepoCommands interface {
		// Cancel changes the status of the launches to cancelled if they meet the launchPad daily restriction (only applies to the launches with booking)
		Cancel(ctx context.Context, lPadRestriction map[string][]time.Time) (cancelled []uuid.UUID, err error)
		// CancelByID changes the status of the launch to cancelled
		CancelByID(ctx context.Context, id uuid.UUID) error
		// CreateBooking persists the provided booking and returns the autogenerated booking id
		CreateBooking(ctx context.Context, booking Booking) (id uuid.UUID, err error)
	}

	// BookingRepoQueries is an interface for query persisted bookings
	BookingRepoQueries interface {
	}

	// Booking represents a Booking in the domain model
	Booking struct {
		ID        uuid.UUID
		FirstName string
		LastName  string
		BirthDay  time.Time
		Gender    Gender
		CreatedAt time.Time
		UpdatedAt time.Time
	}

	// Ticket is the result of a successfully scheduled booking
	Ticket struct {
		ID          uuid.UUID
		FirstName   string
		LastName    string
		LaunchPadID string
		LaunchDate  time.Time
	}
)
